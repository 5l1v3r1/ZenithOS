$WW$A $FG,2$bump allocator$FG$ is a very simple type of allocation system where a pointer is incremented by the allocation size and the original address is returned. A Free involves decreasing the pointer by the size of the previous alloc. This means freeing must be done in $FG,2$FIFO order$FG$.
This simple system is meant to be used with $LK,"RealModeInt",A="MN:RealModeInt"$() to provide a way to alloc memory under the 1 MiB limit, for use with BIOS calls. The starting base address is $FG,14$0x500$FG$, but this can be changed by modifying $LK,"BALLOC_INIT_BASE",A="MN:BALLOC_INIT_BASE"$, or less permanently, $LK,"dev.balloc_ptr",A="FF:::/Kernel/KernelA.HH,balloc_ptr"$. Technically, you could use this anywhere in memory, even inside a chunk from MAlloc!
 